#! /bin/bash

# Set via environment variable
if [ -z $LUA ]; then
  LUA=luajit
fi
TIMEF=.test_time_file

trap "rm -f $TIMEF" EXIT

if [ -t 0 ]; then
  echo "Using: $($LUA -v)"
else
  printf "Using: %s%s%s\n" '`' "$($LUA -v)" '`'
fi

if ! [ -t 0 ]; then # terminal check, to output differently for README
  echo '```diff'
fi

if [ "$#" -gt 0 ]; then
  daylist="$1"
else
  daylist=$(seq 1 25)
fi

ret=0
for di in $daylist; do
  d=day"$di"
  luafile="$d".lua
  if [ -e "$luafile" ]; then
    for i in 1 2; do
      partfile="io/$d/part${i}.txt"
      if [ -e "$partfile" ]; then
        if diff -w "$partfile" <((time -p $LUA "$luafile" ${i} < "io/$d/input.txt") 2>$TIMEF) &> /dev/null; then
          if [ -t 0 ]; then
            printf "%s\tpart%d: " "$d" "$i"
            echo -ne $'\e[32m+\e[0m'
          else
            printf "%s %s\tpart%d: OK" "+" "$d" "$i"
          fi
        else
          ret=1 # fail the return
          if [ -t 0 ]; then
            printf "%s\tpart%d: " "$d" "$i"
            echo -ne $'\e[31m-\e[0m'
          else
            printf "%s %s\tpart%d: FAIL" "-" "$d" "$i"
          fi
        fi
        elapsed=$(head -1 "$TIMEF" | awk '{ print $2; }')
        printf " (%ss)\n" "$elapsed"
      fi
    done
  fi
done

if ! [ -t 0 ]; then
  echo '```'
fi

exit $ret
